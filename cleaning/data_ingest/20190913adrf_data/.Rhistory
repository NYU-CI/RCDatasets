,"'",a$data_provider,"'"
,collapse=" ,")
the_vals<-paste("'",a$originial_dataset_name,"'"
,"'",a$dataset_name,"'"
,"'",a$data_provider,"'"
,collapse=" ,")
the_vals<-paste("'",a$originial_dataset_name,"'"
,"'",a$dataset_name,"'"
,"'",a$data_provider,"'"
,collapse=",")
the_vals
the_vals<-paste0("'",a$originial_dataset_name,"'"
,"'",a$dataset_name,"'"
,"'",a$data_provider,"'"
,collapse=",")
the_vals
the_vals<-paste0("'",a$originial_dataset_name,"'"
,"'",a$dataset_name,"'"
,"'",a$data_provider,"'"
,sep=",")
the_vals
the_vals<-paste0("'",a$originial_dataset_name,"'"
,"'",a$dataset_name,"'"
,"'",a$data_provider,"'"
,collapse=",")
the_vals
the_vals<-paste0("'",a$originial_dataset_name,"'"
,"'",a$dataset_name,"'"
,"'",a$data_provider,"'"
,sep=",")
the_vals
the_vals<-paste0("'",a$originial_dataset_name,"',"
,"'",a$dataset_name,"',"
,"'",a$data_provider,"',"
,sep=",")
the_vals
the_vals<-paste0("'",a$originial_dataset_name,"',"
,"'",a$dataset_name,"',"
,"'",a$data_provider,"',"
)
the_vals
the_vals<-paste0("'",a$originial_dataset_name,"',"
,"'",a$dataset_name,"',"
,"'",a$data_provider,"'"
)
the_vals
the_vals<-paste0("(","'",a$originial_dataset_name,"',"
,"'",a$dataset_name,"',"
,"'",a$data_provider,"'",")"
)
the_vals
insert_vals<-paste(the_vals,sep=",")
insert_vals
insert_vals<-paste(the_vals,collapse=",")
insert_vals
insert_query = sprintf("INSERT INTO dataset_names(dataset_name_id, dataset_name, dataset_provider) VALUES %s",insert_vals)
insert_query
a
Sys.time()
as.Date(Sys.time())
the_vals<-paste0("(","'",a$originial_dataset_name,"',"
,"'",a$dataset_name,"',"
,"'",a$data_provider,"',"
,as.Date(Sys.time())
,")"
)
insert_vals<-paste(the_vals,collapse=",")
insert_query = sprintf("INSERT INTO dataset_names(dataset_name_id, dataset_name, dataset_provider) VALUES %s",insert_vals)
insert_query
con <-DBI::dbConnect(pgdrv,
dbname="rcdb",
host="richcontext.cz5u3bpfaar4.us-east-1.rds.amazonaws.com", port=5432,
user = 'postgres',
password = 'rc_dumps')
s_query<-"SELECT dataset_name_id, dataset_name, dataset_provider, date_inserted FROM dataset_names;"
res <- dbSendQuery(con, s_query)
dbFetch(res)
dbClearResult(res)
head(final_dataset_df)
final_dataset_df<-dataset_df %>% mutate(data_provider = 'U.S. Department of Agriculture') %>%
filter(!is.na(canonical_name)) %>%
select(dataset_name, canonical_name,data_provider) %>%
dplyr::rename("original_dataset_name" = "dataset_name","dataset_name" = "canonical_name")
head(final_dataset_df)
insert_usda_dataset_names <-function(usda_dataset_df){
the_vals<-paste0("(","'",usda_dataset_df$original_dataset_name,"',"
,"'",usda_dataset_df$dataset_name,"',"
,"'",usda_dataset_df$data_provider,"'"
,")")
insert_vals<-paste(the_vals,collapse=",")
insert_query = sprintf("INSERT INTO dataset_names (originial_dataset_name, dataset_name, dataset_provider)  VALUES %s",insert_vals)
res <- dbSendQuery(con, insert_query)
}
a<-head(final_dataset_df)
insert_usda_dataset_names(a)
insert_usda_dataset_names <-function(usda_dataset_df){
the_vals<-paste0("(","'",usda_dataset_df$original_dataset_name,"',"
,"'",usda_dataset_df$dataset_name,"',"
,"'",usda_dataset_df$data_provider,"'"
,")")
insert_vals<-paste(the_vals,collapse=",")
insert_query = sprintf("INSERT INTO dataset_names (original_dataset_name, dataset_name, dataset_provider)  VALUES %s",insert_vals)
res <- dbSendQuery(con, insert_query)
}
a<-head(final_dataset_df)
insert_usda_dataset_names(a)
insert_usda_dataset_names <-function(usda_dataset_df){
the_vals<-paste0("(","'",usda_dataset_df$original_dataset_name,"',"
,"'",usda_dataset_df$dataset_name,"',"
,"'",usda_dataset_df$data_provider,"'"
,")")
insert_vals<-paste(the_vals,collapse=",")
insert_query = sprintf("INSERT INTO dataset_names (original_dataset_name, dataset_name, dataset_provider)  VALUES %s",insert_vals)
res <- dbSendQuery(con, insert_query)
}
a<-head(final_dataset_df)
insert_usda_dataset_names(a)
a
a<-unique(head(final_dataset_df))
insert_usda_dataset_names(a)
s_query<-"SELECT dataset_name_id, dataset_name, dataset_provider, date_inserted FROM dataset_names;"
res <- dbSendQuery(con, s_query)
dbFetch(res)
dbClearResult(res)
s_query<-"SELECT * FROM dataset_names;"
res <- dbSendQuery(con, s_query)
dbFetch(res)
getwd()
list.files(getwd())
setwd("/Users/sophierand/RCDatasets/cleaning/20190913usda_data")
list.files(getwd())
library(RODBC)
library(RPostgreSQL)
library(DBI)
library("RPostgreSQL")
pgdrv <- DBI::dbDriver(drvName = "PostgreSQL")
con <-DBI::dbConnect(pgdrv,
dbname="rcdb",
host="richcontext.cz5u3bpfaar4.us-east-1.rds.amazonaws.com", port=5432,
user = 'postgres',
password = 'rc_dumps')
s_query<-"SELECT * FROM dataset_names;"
res <- dbSendQuery(con, s_query)
dbFetch(res)
setwd("/Users/sophierand/RCDatasets/cleaning/20190913usda_data")
library(RODBC)
install.packages("RPostgreSQL")
library(RPostgreSQL)
library(DBI)
library("RPostgreSQL")
pgdrv <- DBI::dbDriver(drvName = "PostgreSQL")
con <-DBI::dbConnect(pgdrv,
dbname="rcdb",
host="richcontext.cz5u3bpfaar4.us-east-1.rds.amazonaws.com", port=5432,
user = 'postgres',
password = 'rc_dumps')
s_query<-"SELECT * FROM dataset_names;"
res <- dbSendQuery(con, s_query)
dbFetch(res)
install.packages("RPostgreSQL")
s_query<-"SELECT * FROM dataset_names;"
res <- dbSendQuery(con, s_query)
dbFetch(res)
dataset_crosswalk <- read.table("/Users/sophierand/RCDatasets/cleaning/dataset_name_crosswalk.csv", sep = ",", header = T,stringsAsFactors = F)
dataset_crosswalk <- read.table("/Users/sophierand/RCDatasets/dataset_name_crosswalk.csv", sep = ",", header = T,stringsAsFactors = F)
dataset_crosswalk
head(dataset_crosswalk)
the_vals<-paste0("(","'",dataset_crosswalk$canonical_name,"',"
,"'",dataset_crosswalk$alt_name,"'"
,")")
insert_vals<-paste(the_vals,collapse=",")
insert_query = sprintf("INSERT INTO dataset_crosswalk(canonical_name, alt_name) VALUES %s",insert_vals)
insert_query
insert_crosswalk_vals <-function(dataset_crosswalk){
the_vals<-paste0("(","'",dataset_crosswalk$canonical_name,"',"
,"'",dataset_crosswalk$alt_name,"'"
,")")
insert_vals<-paste(the_vals,collapse=",")
insert_query = sprintf("INSERT INTO dataset_crosswalk(canonical_name, alt_name) VALUES %s",insert_vals)
res <- dbSendQuery(con, insert_query)
}
dataset_crosswalk <- read.table("/Users/sophierand/RCDatasets/dataset_name_crosswalk.csv", sep = ",", header = T,stringsAsFactors = F)
dataset_crosswalk<-unique(dataset_crosswalk)
insert_crosswalk_vals <-function(dataset_crosswalk){
the_vals<-paste0("(","'",dataset_crosswalk$canonical_name,"',"
,"'",dataset_crosswalk$alt_name,"'"
,")")
insert_vals<-paste(the_vals,collapse=",")
insert_query = sprintf("INSERT INTO dataset_crosswalk(canonical_name, alt_name) VALUES %s",insert_vals)
res <- dbSendQuery(con, insert_query)
}
insert_crosswalk_vals(dataset_crosswalk = dataset_crosswalk)
insert_crosswalk_vals(dataset_crosswalk = dataset_crosswalk)
head(dataset_df)
head(usda_data_df)
usda_dataset_df<-usda_data_df %>%
mutate(dataset_name = strsplit(as.character(Datasets), "▪")) %>%
unnest(dataset_name) %>%
# select(dataset_name,sheet_name) %>%
filter(dataset_name != "") %>%
mutate(dataset_name = trimws(dataset_name)) %>%
mutate(mention_name = ifelse(grepl(alias_patterns,dataset_name),str_extract_all(dataset_name, alias_patterns),dataset_name)) %>%
unnest()
usda_dataset_df<-usda_data_df %>%
mutate(dataset_name = strsplit(as.character(Datasets), "▪")) %>%
unnest(dataset_name) %>%
# select(dataset_name,sheet_name) %>%
filter(dataset_name != "") %>%
mutate(dataset_name = trimws(dataset_name)) %>%
mutate(mention_name = ifelse(grepl(alias_patterns,dataset_name),str_extract_all(dataset_name, alias_patterns),dataset_name)) %>%
unnest() %>% unique()
fhead(usda_dataset_df)
head(usda_dataset_df)
usda_dataset_df<-usda_data_df %>%
mutate(original_dataset_name = strsplit(as.character(Datasets), "▪")) %>%
unnest(original_dataset_name) %>%
# select(dataset_name,sheet_name) %>%
filter(dataset_name != "") %>%
mutate(dataset_name = trimws(original_dataset_name)) %>%
mutate(mention_name = ifelse(grepl(alias_patterns,original_dataset_name),str_extract_all(original_dataset_name, alias_patterns),original_dataset_name)) %>%
unnest() %>% unique()
usda_dataset_df<-usda_data_df %>%
mutate(original_dataset_name = strsplit(as.character(Datasets), "▪")) %>%
unnest(original_dataset_name) %>%
# select(dataset_name,sheet_name) %>%
filter(original_dataset_name != "") %>%
mutate(original_dataset_name = trimws(original_dataset_name)) %>%
mutate(mention_name = ifelse(grepl(alias_patterns,original_dataset_name),str_extract_all(original_dataset_name, alias_patterns),original_dataset_name)) %>%
unnest() %>% unique()
head(usda_dataset_df)
usda_dataset_df<-usda_data_df %>%
mutate(original_dataset_name = strsplit(as.character(Datasets), "▪")) %>%
unnest(original_dataset_name) %>%
filter(original_dataset_name != "") %>%
mutate(original_dataset_name = trimws(original_dataset_name)) %>%
unique()
t
dataset_df<-usda_dataset_df %>%
mutate(mention_name = ifelse(grepl(alias_patterns,original_dataset_name),str_extract_all(original_dataset_name, alias_patterns),original_dataset_name)) %>%
unnest() %>%
left_join(dataset_crosswalk, by = c("mention_name" = "alt_name"))
head(dataset_df)
final_dataset_df<-dataset_df %>% mutate(data_provider = 'U.S. Department of Agriculture') %>%
filter(!is.na(canonical_name)) %>%
select(original_dataset_name, canonical_name,data_provider)
head(final_dataset_df)
final_dataset_df[grepl('nhanes',final_dataset_df$original_dataset_name,ignore.case = T)]
final_dataset_df[grepl('nhanes',final_dataset_df$original_dataset_name,ignore.case = T),]
head(final_dataset_df)
setwd("/Users/sophierand/RCDatasets/cleaning/20190913adrf_metadata")
adrf_datasets <- read.table("/Users/sophierand/RCDatasets/adrf_metadata.csv", sep = ",", header = T,stringsAsFactors = F)
setwd("/Users/sophierand/RCDatasets/cleaning/20190913adrf_metadata")
adrf_datasets <- read.table(paste0(getwd(),"/adrf_metadata.csv", sep = ",", header = T,stringsAsFactors = F)
adrf_datasets <- read.table(paste0(getwd(),"/adrf_metadata.csv"), sep = ",", header = T,stringsAsFactors = F)
setwd("/Users/sophierand/RCDatasets/cleaning/20190913adrf_data")
adrf_datasets <- read.table(paste0(getwd(),"/adrf_metadata.csv"), sep = ",", header = T,stringsAsFactors = F)
getwd()
list.files(getwd())
setwd("/Users/sophierand/RCDatasets/cleaning/data_ingest/20190913adrf_data")
list.files(getwd())
setwd("/Users/sophierand/RCDatasets/cleaning/data_ingest/20190913adrf_data")
adrf_datasets <- read.table(paste0(getwd(),"/adrf_metadata.csv"), sep = ",", header = T,stringsAsFactors = F)
adrf_datasets <- read.table(paste0(getwd(),"/adrf_metadata.csv"), sep = ",", header = T,stringsAsFactors = F,fill = T)
adrf_datasets <- read.table(paste0(getwd(),"/adrf_metadata.csv"), quote = "",sep = ",", header = T,stringsAsFactors = F,fill = T)
adrf_datasets <- read.csv(paste0(getwd(),"/adrf_metadata.csv"), quote = "", header = T,stringsAsFactors = F,fill = T)
adrf_datasets <- read.csv(paste0(getwd(),"/adrf_metadata.csv"), quote = "", stringsAsFactors = F)
setwd("/Users/sophierand/RCDatasets/cleaning/data_ingest/20190913adrf_data")
adrf_datasets <- read.csv(paste0(getwd(),"/adrf_metadata.csv"), quote = "", stringsAsFactors = F)
adrf_datasets <- read.csv(paste0(getwd(),"/adrf_metadata.csv"))
head(adrf_datasets)
colnames(adrf_datasets)
paste0(colnames(adrf_datasets),"varchar")
paste0(colnames(adrf_datasets)," varchar")
cat(paste0(colnames(adrf_datasets)," varchar"),"\n")
cat(paste0(colnames(adrf_datasets)," varchar"),",\n")
cat(paste0(colnames(adrf_datasets)," varchar,"),"\n")
colnames(adrf_datasets)
cat(colnames(adrf_datasets),",")
cat(colnames(adrf_datasets),collapse = ",")
paste0(cat(colnames(adrf_datasets))collapse = ",")
paste0(colnames(adrf_datasets,collapse = ",")
paste0(colnames(adrf_datasets),collapse = ",")
# dataset_crosswalk<-unique(dataset_crosswalk)
adrf_datasets<-adrf_datasets %>%
select(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive)
head(adrf_datasets)
insert_vals<-adrf_datasets %>%
transmute(new_cols = paste0(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive))
insert_vals
head(insert_vals)
insert_vals<-adrf_datasets %>%
mutate(new_cols = paste0(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive))
head(insert_vals)
View(insert_vals)
insert_vals<-adrf_datasets %>%
mutate(new_cols = paste0(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames
,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version
,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive,sep = "',"))
insert_vals<-adrf_datasets %>%
mutate(new_cols = paste0(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames
,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version
,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive,sep = ","))
insert_vals<-adrf_datasets %>%
mutate(new_cols = paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames
,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version
,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive,sep = ","))
insert_vals<-adrf_datasets %>%
mutate(new_cols = paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames
,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version
,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive,sep = ","))
insert_vals<-adrf_datasets %>%
mutate(new_cols = gsub(",,",",",paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames
,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version
,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive,sep = ",")))
insert_vals<-adrf_datasets %>%
mutate(new_cols = gsub(",,",", ",paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames
,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version
,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive,sep = ",")))
insert_vals_df<-adrf_datasets %>%
mutate(new_cols = gsub(",,",", ",paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames
,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version
,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive,sep = ",")))
insert_vals<-paste0("(",insert_vals_df$new_cols  ,")")
insert_vals
insert_vals[1]
insert_vals_df<-adrf_datasets %>%
mutate(new_cols = gsub(",,",", ",paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames
,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version
,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive,collapse = "'",sep = ",")))
View(insert_vals_df)
View(insert_vals_df$new_cols)
View(insert_vals_df$new_cols)
insert_vals_df<-adrf_datasets %>%
mutate(new_cols = gsub(",,",", ",paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,category,temporal_coverage_end,dataset_citation,external_id,data_usage_policy,filenames
,access_actions_required,reference_url,data_steward_org,keywords,temporal_coverage_start,title,dataset_version
,alias,dataset_documentation,dataset_header_desc,description,related_articles,source_archive,sep = ",")))
View(insert_vals_df)
a %>% mutate(new_col = paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit))
a<-head(adrf_datasets)
a %>% mutate(new_col = paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit))
b<-a %>% mutate(new_col = paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,sep = ","))
b
a<-head(adrf_datasets)
b<-a %>% mutate(new_col = paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,sep = ",")) %>% select(new_col)
b
head(b)
a<-head(adrf_datasets)
b<-a %>% mutate(new_col = paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit)) %>% select(new_col)
head(b)
a<-head(adrf_datasets)
b<-a %>% mutate(new_col = paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,sep = ",")) %>% select(new_col)
head(b)
a<-head(adrf_datasets)
b<-a %>% mutate(new_col = paste(access_requirements,source_url,data_classification,data_provider,data_steward,adrf_id,geographical_coverage
,geographical_unit,sep = ",")) %>% select(new_col)
head(b)
read_dataset_names<-function(con){
s_query<-"SELECT * FROM dataset_names;"
res <- dbSendQuery(con, s_query)
return(dbFetch(res))
}
read_dataset_names(copn)
read_dataset_names(con)
create_connection<-function(){
con <-DBI::dbConnect(pgdrv,
dbname="rcdb",
host="richcontext.cz5u3bpfaar4.us-east-1.rds.amazonaws.com", port=5432,
user = 'postgres',
password = 'rc_dumps')
return(con)
}
read_dataset_names<-function(con){
s_query<-"SELECT * FROM dataset_names;"
res <- dbSendQuery(con, s_query)
return(dbFetch(res))
}
con<-create_connection()
ds_names<-read_dataset_names(con)
head(ds_names)
dim(final_dataset_df)
head(final_dataset_df)
head(ds_names)
final_dataset_df<-dataset_df %>% mutate(data_provider = 'U.S. Department of Agriculture') %>%
filter(!is.na(canonical_name)) %>%
select(original_dataset_name, canonical_name,data_provider) %>%
dplyr::rename("dataset_name" = "canonical_name") %>% unique()
head(final_dataset_df)
head(final_dataset_df)
data_to_push<-final_dataset_df %>% filter(!(original_dataset_name %in% ds_names$original_dataset_name))
dim(data_to_push)
diim(final_dataset_df)
dim(final_dataset_df)
insert_usda_dataset_names(data_to_push)
View(data_to_push)
head(final_dataset_df)
a<-unique(final_dataset_df)
insert_usda_dataset_names(a)
setwd("/Users/sophierand/RCDatasets/cleaning/20190913usda_data")
library(RODBC)
library(RPostgreSQL)
library(DBI)
library("RPostgreSQL")
pgdrv <- DBI::dbDriver(drvName = "PostgreSQL")
create_connection<-function(){
con <-DBI::dbConnect(pgdrv,
dbname="rcdb",
host="richcontext.cz5u3bpfaar4.us-east-1.rds.amazonaws.com", port=5432,
user = 'postgres',
password = 'rc_dumps')
return(con)
}
run_select_query <- function(con){
s_query <- "SELECT linkage_id, sheet_name, author, released, series, titles, datasets, date_inserted FROM public.usda_linkages_20190913"
res <- dbSendQuery(con, s_query)
return(dbFetch(res))
}
con<-create_connection()
usda_data<-run_select_query(con)
head(usda_data)
usda_dataset_df<-usda_data %>%
mutate(original_dataset_name = strsplit(as.character(Datasets), "▪")) %>%
unnest(original_dataset_name) %>%
filter(original_dataset_name != "") %>%
mutate(original_dataset_name = trimws(original_dataset_name)) %>%
unique()
usda_dataset_df<-usda_data %>%
mutate(original_dataset_name = strsplit(as.character(datasets), "▪")) %>%
unnest(original_dataset_name) %>%
filter(original_dataset_name != "") %>%
mutate(original_dataset_name = trimws(original_dataset_name)) %>%
unique()
head(usda_dataset_df)
unique(usda_dataset_df$original_dataset_name)
usda_dataset_df<-usda_data %>%
mutate(original_dataset_name = strsplit(as.character(datasets), "▪")) %>%
unnest(original_dataset_name) %>%
filter(original_dataset_name != "") %>%
mutate(original_dataset_name = trimws(original_dataset_name)) %>%
unique() %>%
mutate(clean_ds_name = case_when(
grepl("Food and Nutrition Service|FNS",original_dataset_name,ignore.case = T) ~ ~ list(c("Food and Nutrition Service","FNS")
TRUE ~ as.character(original_dataset_name)
)))
usda_dataset_df<-usda_data %>%
mutate(original_dataset_name = strsplit(as.character(datasets), "▪")) %>%
unnest(original_dataset_name) %>%
filter(original_dataset_name != "") %>%
mutate(original_dataset_name = trimws(original_dataset_name)) %>%
unique() %>%
mutate(clean_ds_name = case_when(
grepl("Food and Nutrition Service|FNS",original_dataset_name,ignore.case = T) ~ list(c("Food and Nutrition Service","FNS")
TRUE ~ as.character(original_dataset_name)
)))
source('~/RCDatasets/cleaning/data_ingest/20190913usda_data/clean_data_new.R')
usda_dataset_df<-usda_data %>%
mutate(original_dataset_name = strsplit(as.character(datasets), "▪")) %>%
unnest(original_dataset_name) %>%
filter(original_dataset_name != "") %>%
mutate(original_dataset_name = trimws(original_dataset_name)) %>%
unique() %>%
mutate(clean_ds_name = case_when(
grepl("Food and Nutrition Service|FNS",original_dataset_name,ignore.case = T) ~ list(c("Food and Nutrition Service","FNS")),
TRUE ~ as.character(original_dataset_name)
)))
source('~/RCDatasets/cleaning/data_ingest/20190913usda_data/clean_data_new.R')
usda_dataset_df<-usda_data %>%
mutate(original_dataset_name = strsplit(as.character(datasets), "▪")) %>%
unnest(original_dataset_name) %>%
filter(original_dataset_name != "") %>%
mutate(original_dataset_name = trimws(original_dataset_name)) %>%
unique() %>%
mutate(clean_ds_name = case_when(
grepl("Food and Nutrition Service|FNS",original_dataset_name,ignore.case = T) ~ list(c("Food and Nutrition Service","FNS")),
TRUE ~ as.character(original_dataset_name)))
usda_dataset_df<-usda_data %>%
mutate(original_dataset_name = strsplit(as.character(datasets), "▪")) %>%
unnest(original_dataset_name) %>%
filter(original_dataset_name != "") %>%
mutate(original_dataset_name = trimws(original_dataset_name)) %>%
unique() %>%
mutate(clean_ds_name = case_when(
grepl("Food and Nutrition Service|FNS",original_dataset_name,ignore.case = T) ~ list(c("Food and Nutrition Service","FNS")),
TRUE ~ as.character(original_dataset_name)))
source('~/RCDatasets/cleaning/data_ingest/20190913usda_data/clean_data_new.R')
source('~/RCDatasets/cleaning/data_ingest/20190913usda_data/clean_data_new.R')
usda_dataset_df<-usda_data %>%
mutate(original_dataset_name = strsplit(as.character(datasets), "▪")) %>%
unnest(original_dataset_name) %>%
filter(original_dataset_name != "") %>%
mutate(original_dataset_name = trimws(original_dataset_name)) %>%
unique() %>%
mutate(clean_ds_name = case_when(
grepl("Food and Nutrition Service|FNS",original_dataset_name,ignore.case = T) ~ list("Food and Nutrition Service","FNS"),
TRUE ~ as.character(original_dataset_name)))
source('~/RCDatasets/cleaning/data_ingest/20190913usda_data/clean_data_new.R')
source('~/RCDatasets/cleaning/data_ingest/20190913usda_data/clean_data_new.R')
source('~/RCDatasets/cleaning/data_ingest/20190913usda_data/clean_data_new.R')
